name: "Sentry self-hosted end-to-end tests"
inputs:
  project_name:
    required: true
    description: "e.g. snuba, sentry, relay, self-hosted"
  image_url:
    required: true
    description: "The URL to the built relay, snuba, sentry image to test against."
  docker_repo:
    required: false
    description: "Docker target repo for publishing, e.g. getsentry/snuba"
  docker_password:
    required: false
    default: ""
    description: "The sentrybuilder password to log in to docker to push the successful image"

runs:
  using: "composite"
  steps:
    - name: Check we are in a checkout for the correct repo
      if: ${{ inputs.project_name != 'self-hosted' }}
      shell: bash
      run: git status

    - name: Checkout self-hosted if needed by another project
      if: ${{ inputs.project_name != 'self-hosted' }}
      uses: actions/checkout@v3
      with:
        repository: "getsentry/self-hosted"
        path: self-hosted

    - name: Install sentry-cli
      shell: bash
      run: curl -sL https://sentry.io/get-cli/ | sh

    - name: Get Compose v2.26.0
      shell: bash
      run: |
        # Docker Compose comes pre-installed, reinstall with a specific version
        sudo rm -f "/usr/local/bin/docker-compose"
        sudo rm -f "/usr/local/lib/docker/cli-plugins/docker-compose"
        sudo mkdir -p "/usr/local/lib/docker/cli-plugins"
        sudo curl -L https://github.com/docker/compose/releases/download/v2.26.0/docker-compose-`uname -s`-`uname -m` -o "/usr/local/lib/docker/cli-plugins/docker-compose"
        sudo chmod +x "/usr/local/lib/docker/cli-plugins/docker-compose"

    - name: Pull the test image
      if: ${{ inputs.project_name != 'self-hosted' }}
      id: image_pull
      env:
        IMAGE_URL: ${{ inputs.image_url }}
      shell: bash
      run: |
        echo "We poll for the Docker image that the GCB/GHA build produces until it succeeds or this job times out."
        echo "Polling for $IMAGE_URL"
        timeout 20m bash -c 'until docker pull "$IMAGE_URL" 2>/dev/null; do sleep 10; done'

    - name: Configure to use the test image
      if: ${{ inputs.project_name != 'self-hosted' }}
      shell: bash
      run: |
        cd self-hosted
        image_var=$(echo ${{ inputs.project_name }}_IMAGE | tr '[:lower:]' '[:upper:]')
        sed -i "/^$image_var/d" .env
        echo "${image_var}=${{ inputs.image_url }}" >> .env
        cat .env

    - name: Run the installer
      run: |
        cd self-hosted
        ./install.sh --no-report-self-hosted-issues --skip-commit-check
      shell: bash

    - name: Setup dev environment
      run: |
        pip install -r self-hosted/requirements-dev.txt
        echo "PY_COLORS=1" >> "$GITHUB_ENV"
      shell: bash

    - name: Run tests
      shell: bash
      env:
        PYTEST_SENTRY_DSN: https://5a620019b5124cbba230a9e62db9b825@o1.ingest.us.sentry.io/6627632
      run: |
        cd self-hosted
        pytest --reruns 1 _integration-test/ --customizations=disabled
